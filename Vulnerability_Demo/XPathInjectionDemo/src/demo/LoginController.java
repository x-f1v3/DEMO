package demo;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import java.io.IOException;
import java.net.URLEncoder;

public class LoginController  extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder;
        Document doc = null;
        try {
            builder = factory.newDocumentBuilder();
            String path = this.getClass().getClassLoader().getResource("/").getPath();
            doc = builder.parse(path+"../database.xml");

            // Create XPathFactory object
            XPathFactory xpathFactory = XPathFactory.newInstance();

            // Create XPath object
            XPath xpath = xpathFactory.newXPath();

            String un=request.getParameter("username");
            String pw=request.getParameter("password");
            String command = "//user[name/text()='" + sanitize(un.trim()) + "' and password/text()='" + sanitize(pw.trim()) +"']";

            if(authenticateUser(doc, xpath, un, pw)==true)
            {

                response.sendRedirect("success.html?command="+URLEncoder.encode(command));
                return;
            }
            else
            {
                response.sendRedirect("error.html?command="+URLEncoder.encode(command));
                return;
            }
        } catch (ParserConfigurationException | SAXException | IOException e) {
            e.printStackTrace();
        }

    }
    private static Boolean authenticateUser(Document doc, XPath xpath, String login, String password){
        boolean isValid = false;
        try {
            XPathExpression expr =
                    xpath.compile("//user[name/text()='" + login.trim() + "' and password/text()='" + password.trim() +"']");
            isValid = (boolean) expr.evaluate(doc, XPathConstants.BOOLEAN);
        } catch (XPathExpressionException e) {
            e.printStackTrace();
        }
        return isValid;
    }
    static String sanitize(String text) {
        return text.replace("&", "&amp;").replace("'", "&apos;");
    }


}
